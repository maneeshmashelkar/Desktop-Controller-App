@startuml

title __DESKTOPCONTROLLER's Class Diagram__\n

  namespace com.example.desktopcontroller {
    namespace PowerOff {
      class com.example.desktopcontroller.PowerOff.PowerOffFragment {
          ~ action : String
          ~ builder : Builder
          ~ dialogClickListener : OnClickListener
          ~ lockButton : Button
          ~ restartButton : Button
          ~ shutdownButton : Button
          ~ sleepButton : Button
          + onClick()
          + onCreateView()
          - showConfirmDialog()
      }
    }
  }


  com.example.desktopcontroller.PowerOff.PowerOffFragment .up.|> android.view.View.OnClickListener
  com.example.desktopcontroller.PowerOff.PowerOffFragment -up-|> androidx.fragment.app.Fragment

  namespace com.example.desktopcontroller {
    namespace Mouse {
      class com.example.desktopcontroller.Mouse.MouseFragment {
          - disX : int
          - disY : int
          - initX : int
          - initY : int
          - leftclick : Button
          - mLastMoveTime : long
          - mLastMoveX : float
          - mLastMoveY : float
          - moultiTouch : boolean
          - mouseMoved : boolean
          - mousepad : TextView
          - moveResultX : int
          - moveResultY : int
          - rightclick : Button
          + onCreateView()
          - simulateLeftClick()
          - simulateRightClick()
      }
    }
  }


  com.example.desktopcontroller.Mouse.MouseFragment -up-|> androidx.fragment.app.Fragment

   namespace com.example.desktopcontroller {
      namespace Keyboard {
        class com.example.desktopcontroller.Keyboard.KeyboardFragment {
            ~ altButton : Button
            ~ backspaceButton : Button
            ~ clearButton : Button
            ~ ctrlButton : Button
            ~ enterButton : Button
            ~ escButton : Button
            ~ keyEditText : EditText
            ~ previousText : CharSequence
            ~ shiftButton : Button
            ~ tabButton : Button
            + afterTextChanged()
            + beforeTextChanged()
            + onClick()
            + onCreateView()
            + onTextChanged()
            + onTouch()
            - newCharacter()
            - sendKeyCodeToServer()
        }
      }
    }


    com.example.desktopcontroller.Keyboard.KeyboardFragment .up.|> android.text.TextWatcher
    com.example.desktopcontroller.Keyboard.KeyboardFragment .up.|> android.view.View.OnClickListener
    com.example.desktopcontroller.Keyboard.KeyboardFragment .up.|> android.view.View.OnTouchListener
    com.example.desktopcontroller.Keyboard.KeyboardFragment -up-|> androidx.fragment.app.Fragment


  namespace com.example.desktopcontroller {
    interface com.example.desktopcontroller.CallbackReceiver {
        {abstract} + receiveData()
    }
  }
    namespace com.example.desktopcontroller {
      namespace Presentation {
        class com.example.desktopcontroller.Presentation.PresentationFragment {
            ~ downButton : Button
            ~ flag : boolean
            ~ leftButton : Button
            ~ presentationButton : Button
            ~ rightButton : Button
            ~ upButton : Button
            + onClick()
            + onCreateView()
        }
      }
    }


    com.example.desktopcontroller.Presentation.PresentationFragment .up.|> android.view.View.OnClickListener
    com.example.desktopcontroller.Presentation.PresentationFragment -up-|> androidx.fragment.app.Fragment


   namespace com.example.desktopcontroller {
      namespace Connect {
        class com.example.desktopcontroller.Connect.ConnectFragment {
            ~ sharedPreferences : SharedPreferences
            - IP : EditText
            - PORT : EditText
            - connect : Button
            + makeConnection()
            + onCreateView()
            - getConnectionDetails()
            - setConnectionDetails()
        }
      }
    }


    com.example.desktopcontroller.Connect.ConnectFragment -up-|> androidx.fragment.app.Fragment

  

  namespace com.example.desktopcontroller {
    class com.example.desktopcontroller.MainActivity {
        {static} + clientSocket : Socket
        {static} + objectOutputStream : ObjectOutputStream
        ~ drawerLayout : DrawerLayout
        ~ toolText : TextView
        + onNavigationItemSelected()
        {static} + sendMessageToServer()
        {static} + sendMessageToServer()
        # onCreate()
        # onDestroy()
        - replaceFragment()
    }
  }
  

  namespace com.example.desktopcontroller {
    abstract class com.example.desktopcontroller.MakeConnection {
        - clientSocket : Socket
        - ipAddress : String
        - port : String
        {abstract} + receiveData()
        # MakeConnection()
        # doInBackground()
        # onPostExecute()
    }
  }
  

  namespace com.example.desktopcontroller {
    class com.example.desktopcontroller.SendMessageToServer {
        # doInBackground()
    }
  }
  

  com.example.desktopcontroller.MainActivity .up.|> com.google.android.material.navigation.NavigationView.OnNavigationItemSelectedListener
  com.example.desktopcontroller.MainActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.example.desktopcontroller.MakeConnection .up.|> com.example.desktopcontroller.CallbackReceiver
  com.example.desktopcontroller.MakeConnection -up-|> android.os.AsyncTask
  com.example.desktopcontroller.SendMessageToServer -up-|> android.os.AsyncTask


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
